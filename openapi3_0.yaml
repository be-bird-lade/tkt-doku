openapi: 3.0.3
info:
  title: TKT Berlin API
  version: 0.0.3
  description: API-Dokumentation zum DataHub des Tourismusvereins Berlin Treptow-Köpenick e.V.
paths:
  /items/event_occurrences:
    get:
      summary: Liste aller Termine eines Events
      description: Enhält alle Einzeltermine der Events sowie Informationen zu Status (active, postponed, cancelled). Termine werden automatisch aus der Wiederholungslogik eines Events generiert, können aber manuell überschrieben werden (updated_by_user = true).
      tags:
      - event_occurrences
      parameters:
      - name: filter[event][_eq]
        in: query
        description: ID des verknüpften Events (optional)
        required: false
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Gefilterte Liste von event_occurrences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event_occurrences'
  /items/events:
    get:
      summary: Liste aller items in events (Hauptevents)
      tags:
        - events
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
            example: "*.*"
          description: Gibt an, welche Felder geladen werden sollen. Z.B. `*.*` für alle Felder inkl. Relationen.
        - name: filter[type][_eq]
          in: query
          required: false
          schema:
            type: string
          description: Filter nach 'event', 'program' oder 'tour'
      responses:
        '200':
          description: A list of events items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
  /items/events/{id}:
    get:
      summary: Ein einzelnes Event anhand der ID abrufen
      tags:
      - events
      parameters:
      - name: id
        in: path
        required: true
        description: ID des Events
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Ein einzelnes Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
  /items/event_categories/{id}:
    get:
      summary: Eine Event-Kategorie anhand der ID abrufen
      tags:
      - events
      parameters:
      - name: id
        in: path
        required: true
        description: ID der Event-Kategorie
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Ein einzelnes Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event_categories'
  /items/event_tags/{id}:
    get:
      summary: Einen Event-Tag anhand der ID abrufen
      tags:
      - events
      parameters:
      - name: id
        in: path
        required: true
        description: ID des Event-Tags
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Ein einzelnes Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event_tags'
  /items/organizations:
    get:
      summary: List all items in organizations
      tags:
      - organizations
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
            example: "*.*"
          description: Gibt an, welche Felder geladen werden sollen. Z.B. `*.*` für alle Felder inkl. Relationen.
      responses:
        '200':
          description: A list of organizations items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizations'
  /items/places:
    get:
      summary: List all items in places
      tags:
      - places
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: string
            example: "*.*"
          description: Gibt an, welche Felder geladen werden sollen. Z.B. `*.*` für alle Felder inkl. Relationen.
      responses:
        '200':
          description: A list of places items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/places'
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    event_occurrences:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          description: active, postponed oder cancelled
        event:
          type: string
          format: uuid
          description: ID des zugehörigen Events
        start_date:
          type: string
          format: dateTime
          description: Startdatum inkl. Uhrzeit des Events
        end_date:
          type: string
          format: dateTime
          description: Enddatum inkl. Uhrzeit des Events (optional)
        door_time:
          type: string
          format: time
          description: Zeitangabe zum Einlass
        updated_by_user:
          type: boolean
          description: Angabe, ob nachträglich manuell bearbeitet
        original_date:
          type: string
          description: Ursprünglich generiertes Datum
    events:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sort:
          type: integer
        user_created:
          type: string
          format: uuid
        date_created:
          type: string
          format: date-time
        user_updated:
          type: string
          format: uuid
        date_updated:
          type: string
          format: date-time
        organization:
          $ref: '#/components/schemas/organizations'
        translations:
          $ref: '#/components/schemas/events_translations'
        type:
          type: string
          description: Unterscheidung nach event, program, tour
        categories:
          type: object
          properties:
            id:
              type: integer
              description: ID der zugehörigen Kategorie
        start_date:
          type: string
          format: date-time
          description: Initiales Startdatum. Wird vor allem für die Wiederholungslogik verwendet und entsprechend immer für die Generierung des ersten Termins verwendet
        end_date:
          type: string
          format: date-time
          description: Initiales Endatum. Wird vor allem für die Wiederholungslogik verwendet und entsprechend immer für die Generierung des ersten Termins verwendet
        ticket_link:
          type: string
          description: URL zu einem Ticketsystem im Format https://...
          example: https://...
        featured_image:
          $ref: '#/components/schemas/files'
        external_link:
          type: string
          description: URL zu einer passenden Eventwebseite im Format https://...
          example: https://...
        is_highlight:
          type: boolean
          description: Gibt an ob eine Veranstaltung hervorgehoben werden soll.
        gallery:
          type: array
          items: 
            $ref: '#/components/schemas/files'
        is_recurring:
          type: boolean
          description: Gibt an, ob eine Wiederholungslogik greift oder nicht. Der erste Termin wird allerdings immer generiert, auch wenn is_recurring = false
        price:
          type: number
          format: float
        location:
          $ref: '#/components/schemas/places'
        group_size_min:
          type: integer
          description: Mindest Teilnehmerzahl. (Nur bei type = program || tour)
        group_size_max:
          type: integer
          description: Maximale Teilnehmerzahl. (Nur bei type = program || tour)
        language:
          $ref: '#/components/schemas/event_languages'
        door_time:
          type: string
          format: time
          example: "17:00:00"
          description: Zeitangabe zum Einlass
        repeat_frequency:
          type: string
          description: Auswahl Wiederholungsfrequenz nach ISO 8601 Duration Format (P1D, P2D, P3D, P1W, P2W, P3W, P1M, P2M, P3M, P1Y)
        by_day:
          type: string
          description: Angabe Wiederholungslogik - Wiederholung an bestimmten Wochentagen (MO, TU, WE, TH, FR, SA, SU)
        by_month:
          type: string
          description: Angabe Wiederholungslogik - Wiederholung nur in bestimmten Monaten (1 = Januar, 2 = Februar, ... 12 = Dezember)
        repeat_count:
          type: integer
          description: Angabe Wiederholungslogik - Anzahl der Wiederholungen
        except_dates:
          type: string
          description: Angabe Wiederholungslogik - Datumsangaben die von der Wiederholung ausgenommen sind
        occurrences:
          type: string
          description: Generierte Einzeltermine eines Events
        by_month_week:
          type: string
          description: Angabe Wiederholungslogik - Wiederholung in bestimmter Woche eines Monats (1 = 1. Woche, 2 = 2. Woche, ... 5 = 5. Woche)
        by_month_day:
          type: string
          description: Angabe Wiederholungslogik - Wiederholung an bestimmten Tagen des Monats
        archived:
          type: boolean
          description: Wenn true -> Event abgelaufen bze. alle Termine des Events abgelaufen
        monthly_recurring_type:
          type: string
          description: Angabe Wiederholungslogik - Auswahl Wiederholungstyp bei monatlichen Wiederholungen (by_eventday, by_month_days, by_weekdays)
    events_translations:
      type: object
      properties:
        id:
          type: integer
        events_id:
          type: string
          format: uuid
        languages_code:
          type: string
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        short_description:
          type: string
        tags:
          type: string
        is_active:
          type: boolean
        duration:
          type: string
        ticket_info:
          type: string
    event_categories:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sort:
          type: integer
        translations:
          $ref: '#/components/schemas/event_categories_translations'
    event_categories_translations:
      type: object
      properties:
        id:
          type: integer
        event_categories_id:
          type: string
          format: uuid
        languages_code:
          type: string
        name:
          type: string
    event_tags:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    event_languages:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sort:
          type: integer
        translation:
          $ref: '#/components/schemas/event_languages_translations'
        flag:
          $ref: '#/components/schemas/files'
    event_languages_translations:
      type: object
      properties:
        id:
          type: integer
        event_languages_id:
          type: string
          format: uuid
        languages_code:
          type: string
        name:
          type: string
    organizations:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_created:
          type: string
          format: uuid
        date_created:
          type: string
          format: date-time
        user_updated:
          type: string
          format: uuid
        date_updated:
          type: string
          format: date-time
        translations:
          type: string
        name:
          type: string
        type:
          type: string
          format: uuid
        phone:
          type: string
        email:
          type: string
        website:
          type: string
        address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        logo:
          type: string
          format: uuid
        featured_image:
          type: string
          format: uuid
        jobs:
          type: string
        persons:
          type: string
        places:
          type: string
        events:
          type: string
        not_berlin:
          type: boolean
        address_data:
          type: string
        layout_wrapper:
          type: string
        sidebar:
          type: string
        content_wrapper:
          type: string
        connections:
          type: string
    organizations_translations:
      type: object
      properties:
        id:
          type: integer
        organizations_id:
          type: string
          format: uuid
        languages_code:
          type: string
        short_description:
          type: string
    places:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_created:
          type: string
          format: uuid
        date_created:
          type: string
          format: date-time
        user_updated:
          type: string
          format: uuid
        date_updated:
          type: string
          format: date-time
        lat:
          type: string
        long:
          type: string
        place_id:
          type: string
        rating:
          type: string
        status:
          type: string
        featured_image:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        city:
          type: string
        phone:
          type: string
        email:
          type: string
        weblink:
          type: string
        address:
          type: string
        postal_code:
          type: string
        organization:
          type: string
        translations:
          type: string
        jobs:
          type: string
        layout_wrapper:
          type: string
        sidebar:
          type: string
        content_wrapper:
          type: string
        address_data:
          type: string
        opening_data:
          type: string
        opening_hours:
          type: string
        content_data:
          type: string
        categories:
          type: string
        routes:
          type: string
        events:
          type: string
        connections:
          type: string
        is_not_berlin:
          type: boolean
    places_translations:
      type: object
      properties:
        id:
          type: integer
        places_id:
          type: string
          format: uuid
        languages_code:
          type: string
        active:
          type: boolean
        name:
          type: string
        short_description:
          type: string
        content:
          type: string
    files:
      type: object
      description: BildURLs sind nach folgendem Schema aufgebaut - https://data.tkt-berlin.de/assets/[id]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        filename_download:
          type: string
        with:
          type: integer
        height:
          type: integer
servers:
- url: https://data.tkt-berlin.de
  description: DataHub von TKT Berlin
